version: "3.8"
services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    #command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.getSiblingDB('devicerental').getCollectionNames().includes('devices')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-tier
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
    - MONGODB_HOST=${MONGODB_HOST}
    - MONGODB_PORT=${MONGODB_PORT}
    - MONGODB_DATABASE=${MONGODB_DATABASE}
    - MONGODB_URI=mongodb://${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_DATABASE}
    - PORT=${PORT}
    - NODE_ENV=development
    - JWT_SECRET=${JWT_SECRET}
    - EXPORT_DIR=/app/exports/Device-list  # 명시적 경로 설정
    volumes:
    - ./backend/exports/Device-list:/app/exports/Device-list  # 볼륨 매핑 추가
    networks:
      - app-tier
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    networks:
      - app-tier
volumes:
  mongo-data:
networks:
  app-tier:
    driver: bridge