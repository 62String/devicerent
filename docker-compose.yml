services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "0.0.0.0:27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.getSiblingDB('devicerental').getCollectionNames().includes('devices')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-tier

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:4000:4000"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - PORT=4000
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/devicerental
      - JWT_SECRET=${JWT_SECRET}
      - EXPORT_DIR=/app/exports/Device-list
    command: sh -c "sleep 20 && npm start"
    volumes:
      - ./backend/exports/Device-list:/app/exports/Device-list
    networks:
      - app-tier

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:4000
    networks:
      - app-tier

volumes:
  mongo-data:

networks:
  app-tier:
    driver: bridge