window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":10,"numPassedTests":53,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":54,"startTime":1743260318547,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260327076,"runtime":833,"slow":false,"start":1743260326243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\initDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["initDevices"],"duration":17,"failureMessages":[],"fullName":"initDevices should throw error if invalid devices are found","status":"passed","title":"should throw error if invalid devices are found"},{"ancestorTitles":["initDevices"],"duration":1,"failureMessages":[],"fullName":"initDevices should import devices successfully from Excel file","status":"passed","title":"should import devices successfully from Excel file"},{"ancestorTitles":["initDevices"],"duration":1,"failureMessages":[],"fullName":"initDevices should throw error if Excel file contains invalid data","status":"passed","title":"should throw error if Excel file contains invalid data"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260327550,"runtime":1308,"slow":false,"start":1743260326242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\me.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/me"],"duration":28,"failureMessages":[],"fullName":"GET /api/me should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/me"],"duration":6,"failureMessages":[],"fullName":"GET /api/me should return 404 if user is not found","status":"passed","title":"should return 404 if user is not found"},{"ancestorTitles":["GET /api/me"],"duration":5,"failureMessages":[],"fullName":"GET /api/me should return 200 with user data if user is found","status":"passed","title":"should return 200 with user data if user is found"},{"ancestorTitles":["GET /api/me"],"duration":5,"failureMessages":[],"fullName":"GET /api/me should return 401 if token verification fails","status":"passed","title":"should return 401 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260327566,"runtime":1323,"slow":false,"start":1743260326243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\data.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/data"],"duration":29,"failureMessages":[],"fullName":"GET /api/data should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/data"],"duration":5,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is not found","status":"passed","title":"should return 403 if user is not found"},{"ancestorTitles":["GET /api/data"],"duration":5,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is pending","status":"passed","title":"should return 403 if user is pending"},{"ancestorTitles":["GET /api/data"],"duration":5,"failureMessages":[],"fullName":"GET /api/data should return 200 with user data if user is valid","status":"passed","title":"should return 200 with user data if user is valid"},{"ancestorTitles":["GET /api/data"],"duration":4,"failureMessages":[],"fullName":"GET /api/data should return 403 if token verification fails","status":"passed","title":"should return 403 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260327666,"runtime":1423,"slow":false,"start":1743260326243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\clearInvalidDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":34,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260328122,"runtime":1883,"slow":false,"start":1743260326239},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\clearInvalidDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":31,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260328132,"runtime":1888,"slow":false,"start":1743260326244},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\initDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/init-devices"],"duration":32,"failureMessages":[],"fullName":"POST /api/admin/init-devices should initialize devices successfully","status":"passed","title":"should initialize devices successfully"}]},{"numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260328147,"runtime":1906,"slow":false,"start":1743260326241},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\verifyDataIntegrity.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGET /api/admin/verify-data-integrity › should return 403 if user is not admin\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m403\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 150 |\u001b[39m       \u001b[33m.\u001b[39m\u001b[36mset\u001b[39m(\u001b[32m'Authorization'\u001b[39m\u001b[33m,\u001b[39m userToken)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 151 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 152 |\u001b[39m     expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m403\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m     expect(res\u001b[33m.\u001b[39mbody\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Admin access required'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/server/verifyDataIntegrity.test.js\u001b[39m\u001b[0m\u001b[2m:152:24)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":27,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with no issues if data is valid","status":"passed","title":"should return 200 with no issues if data is valid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":4,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with issues if data is invalid","status":"passed","title":"should return 200 with issues if data is invalid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":3,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":5,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m403\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.toBe (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\verifyDataIntegrity.test.js:152:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"GET /api/admin/verify-data-integrity should return 403 if user is not admin","status":"failed","title":"should return 403 if user is not admin"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260328163,"runtime":1923,"slow":false,"start":1743260326240},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API","GET /api/devices"],"duration":20,"failureMessages":[],"fullName":"Devices API GET /api/devices should return list of devices","status":"passed","title":"should return list of devices"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":5,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 401 if no token provided","status":"passed","title":"should return 401 if no token provided"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":3,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return list of available devices","status":"passed","title":"should return list of available devices"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":15,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should rent a device successfully","status":"passed","title":"should rent a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":4,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if device already rented","status":"passed","title":"should fail if device already rented"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":4,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should return a device successfully","status":"passed","title":"should return a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":3,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if device not rented","status":"passed","title":"should fail if device not rented"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260328319,"runtime":2077,"slow":false,"start":1743260326242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\exportRetentionData.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["exportRetentionData"],"duration":5,"failureMessages":[],"fullName":"exportRetentionData should export retention data","status":"passed","title":"should export retention data"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260330243,"runtime":4000,"slow":false,"start":1743260326243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\auth\\auth.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":177,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should register a new user","status":"passed","title":"should register a new user"},{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":53,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should fail to register if user already exists","status":"passed","title":"should fail to register if user already exists"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":100,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should login successfully with correct credentials","status":"passed","title":"should login successfully with correct credentials"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":97,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login with incorrect password","status":"passed","title":"should fail to login with incorrect password"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":53,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login if user does not exist","status":"passed","title":"should fail to login if user does not exist"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":53,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available true if ID is not taken","status":"passed","title":"should return available true if ID is not taken"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":51,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available false if ID is taken","status":"passed","title":"should return available false if ID is taken"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":57,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should return user data with valid token","status":"passed","title":"should return user data with valid token"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":51,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if no token provided","status":"passed","title":"should fail if no token provided"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":56,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if user not found","status":"passed","title":"should fail if user not found"}]},{"numFailingTests":0,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743260332634,"runtime":6394,"slow":true,"start":1743260326240},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\admin\\users.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":210,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":160,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return pending users","status":"passed","title":"should return pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":148,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return empty list if no pending users","status":"passed","title":"should return empty list if no pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":144,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":149,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return approved users","status":"passed","title":"should return approved users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":197,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return empty list if no approved users","status":"passed","title":"should return empty list if no approved users"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":156,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":147,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":152,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should approve a pending user","status":"passed","title":"should approve a pending user"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":148,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":145,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":150,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should reject a user and save to DeletedUser","status":"passed","title":"should reject a user and save to DeletedUser"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":145,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":149,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":147,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting own account","status":"passed","title":"should fail if deleting own account"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":192,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting higher or equal role level","status":"passed","title":"should fail if deleting higher or equal role level"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":148,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should delete a user and save to DeletedUser","status":"passed","title":"should delete a user and save to DeletedUser"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["routes/**/*.js","models/**/*.js","utils/**/*.js","server.js","!**/*.test.js","!**/*.integration.test.js"],"coverageDirectory":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html"],"coverageThreshold":{"global":{"statements":0,"branches":0,"functions":0,"lines":0}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","includeCoverage":true,"openReport":false}]],"rootDir":"C:\\Users\\62String\\DeviceRentalApi\\backend","runTestsByPath":false,"seed":-538550522,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1743260332672,"_reporterOptions":{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeCoverage":true},"logInfoMapping":{},"attachInfos":{}})