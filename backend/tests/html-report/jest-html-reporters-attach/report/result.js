window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":11,"numPassedTests":61,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":61,"startTime":1743477446671,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477448494,"runtime":1327,"slow":false,"start":1743477447167},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\initDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["initDevices"],"duration":28,"failureMessages":[],"fullName":"initDevices should throw error if invalid devices are found","status":"passed","title":"should throw error if invalid devices are found"},{"ancestorTitles":["initDevices"],"duration":3,"failureMessages":[],"fullName":"initDevices should import devices successfully from Excel file","status":"passed","title":"should import devices successfully from Excel file"},{"ancestorTitles":["initDevices"],"duration":2,"failureMessages":[],"fullName":"initDevices should throw error if Excel file contains invalid data","status":"passed","title":"should throw error if Excel file contains invalid data"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477448981,"runtime":1827,"slow":false,"start":1743477447154},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\me.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/me"],"duration":50,"failureMessages":[],"fullName":"GET /api/me should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/me"],"duration":14,"failureMessages":[],"fullName":"GET /api/me should return 404 if user is not found","status":"passed","title":"should return 404 if user is not found"},{"ancestorTitles":["GET /api/me"],"duration":13,"failureMessages":[],"fullName":"GET /api/me should return 200 with user data if user is found","status":"passed","title":"should return 200 with user data if user is found"},{"ancestorTitles":["GET /api/me"],"duration":11,"failureMessages":[],"fullName":"GET /api/me should return 401 if token verification fails","status":"passed","title":"should return 401 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477449012,"runtime":1875,"slow":false,"start":1743477447137},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\data.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/data"],"duration":53,"failureMessages":[],"fullName":"GET /api/data should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/data"],"duration":13,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is not found","status":"passed","title":"should return 403 if user is not found"},{"ancestorTitles":["GET /api/data"],"duration":10,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is pending","status":"passed","title":"should return 403 if user is pending"},{"ancestorTitles":["GET /api/data"],"duration":12,"failureMessages":[],"fullName":"GET /api/data should return 200 with user data if user is valid","status":"passed","title":"should return 200 with user data if user is valid"},{"ancestorTitles":["GET /api/data"],"duration":13,"failureMessages":[],"fullName":"GET /api/data should return 403 if token verification fails","status":"passed","title":"should return 403 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477449733,"runtime":2618,"slow":false,"start":1743477447115},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\initDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/init-devices"],"duration":68,"failureMessages":[],"fullName":"POST /api/admin/init-devices should initialize devices successfully","status":"passed","title":"should initialize devices successfully"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477449758,"runtime":2629,"slow":false,"start":1743477447129},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\clearInvalidDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":76,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":13,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 401 if no token provided","status":"passed","title":"should return 401 if no token provided"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":12,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 403 if user is not admin","status":"passed","title":"should return 403 if user is not admin"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":12,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 500 if server error occurs","status":"passed","title":"should return 500 if server error occurs"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477449759,"runtime":2644,"slow":false,"start":1743477447115},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\clearInvalidDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":62,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477450021,"runtime":2900,"slow":false,"start":1743477447121},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\verifyDataIntegrity.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":43,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with no issues if data is valid","status":"passed","title":"should return 200 with no issues if data is valid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":13,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with issues if data is invalid","status":"passed","title":"should return 200 with issues if data is invalid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":9,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":10,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 403 if user is not admin","status":"passed","title":"should return 403 if user is not admin"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477450119,"runtime":2995,"slow":false,"start":1743477447124},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\server\\exportRetentionData.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["exportRetentionData"],"duration":10,"failureMessages":[],"fullName":"exportRetentionData should export retention data","status":"passed","title":"should export retention data"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477451056,"runtime":3942,"slow":false,"start":1743477447114},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\routes\\devices\\devices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API","GET /api/devices"],"duration":41,"failureMessages":[],"fullName":"Devices API GET /api/devices should return list of devices","status":"passed","title":"should return list of devices"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":8,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 401 if no token provided","status":"passed","title":"should return 401 if no token provided"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":8,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 401 if token is invalid","status":"passed","title":"should return 401 if token is invalid"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":10,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return list of available devices","status":"passed","title":"should return list of available devices"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":12,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return 404 if no available devices","status":"passed","title":"should return 404 if no available devices"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":35,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should rent a device successfully","status":"passed","title":"should rent a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":12,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if device already rented","status":"passed","title":"should fail if device already rented"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":10,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if device not active","status":"passed","title":"should fail if device not active"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":82,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should return a device successfully","status":"passed","title":"should return a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":16,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if device not rented","status":"passed","title":"should fail if device not rented"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":16,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if user is not the renter","status":"passed","title":"should fail if user is not the renter"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477451522,"runtime":4401,"slow":false,"start":1743477447121},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\routes\\auth\\auth.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":249,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should register a new user","status":"passed","title":"should register a new user"},{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":72,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should fail to register if user already exists","status":"passed","title":"should fail to register if user already exists"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":134,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should login successfully with correct credentials","status":"passed","title":"should login successfully with correct credentials"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":130,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login with incorrect password","status":"passed","title":"should fail to login with incorrect password"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":68,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login if user does not exist","status":"passed","title":"should fail to login if user does not exist"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":66,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available true if ID is not taken","status":"passed","title":"should return available true if ID is not taken"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":66,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available false if ID is taken","status":"passed","title":"should return available false if ID is taken"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":74,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should return user data with valid token","status":"passed","title":"should return user data with valid token"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":66,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if no token provided","status":"passed","title":"should fail if no token provided"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":70,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if user not found","status":"passed","title":"should fail if user not found"}]},{"numFailingTests":0,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1743477454075,"runtime":6960,"slow":true,"start":1743477447115},"testFilePath":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\routes\\admin\\users.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":280,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":201,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return pending users","status":"passed","title":"should return pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":193,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return empty list if no pending users","status":"passed","title":"should return empty list if no pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":185,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":188,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return approved users","status":"passed","title":"should return approved users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":246,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return empty list if no approved users","status":"passed","title":"should return empty list if no approved users"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":215,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":187,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":193,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should approve a pending user","status":"passed","title":"should approve a pending user"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":186,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":185,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":228,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should reject a user and save to DeletedUser","status":"passed","title":"should reject a user and save to DeletedUser"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":186,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":185,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":207,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting own account","status":"passed","title":"should fail if deleting own account"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":265,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting higher or equal role level","status":"passed","title":"should fail if deleting higher or equal role level"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":194,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should delete a user and save to DeletedUser","status":"passed","title":"should delete a user and save to DeletedUser"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["routes/**/*.js","models/**/*.js","utils/**/*.js","server.js","!**/*.test.js","!**/*.integration.test.js"],"coverageDirectory":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\tests\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html"],"coverageThreshold":{"global":{"statements":0,"branches":0,"functions":0,"lines":0}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","includeCoverage":true,"openReport":false}]],"rootDir":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend","runTestsByPath":false,"seed":-685786997,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\GAMEDEX\\Projects\\DEVICERENTALAPI\\backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1743477454126,"_reporterOptions":{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeCoverage":true},"logInfoMapping":{},"attachInfos":{}})