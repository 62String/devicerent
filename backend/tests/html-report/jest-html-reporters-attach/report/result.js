window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":18,"numPassedTests":131,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":137,"startTime":1744467350188,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361169,"runtime":2890,"slow":false,"start":1744467358279},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\clearInvalidDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":109,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361176,"runtime":2933,"slow":false,"start":1744467358243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\clearInvalidDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":98,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should clear invalid devices and re-sync","status":"passed","title":"should clear invalid devices and re-sync"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":6,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 401 if no token provided","status":"passed","title":"should return 401 if no token provided"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":6,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 403 if user is not admin","status":"passed","title":"should return 403 if user is not admin"},{"ancestorTitles":["POST /api/admin/clear-invalid-devices"],"duration":5,"failureMessages":[],"fullName":"POST /api/admin/clear-invalid-devices should return 500 if server error occurs","status":"passed","title":"should return 500 if server error occurs"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361226,"runtime":2984,"slow":false,"start":1744467358242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\exportRetentionData.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["exportRetentionData"],"duration":74,"failureMessages":[],"fullName":"exportRetentionData should export and delete retention data older than 2 years","status":"passed","title":"should export and delete retention data older than 2 years"},{"ancestorTitles":["exportRetentionData"],"duration":12,"failureMessages":[],"fullName":"exportRetentionData should do nothing if no retention data exists","status":"passed","title":"should do nothing if no retention data exists"},{"ancestorTitles":["exportRetentionData"],"duration":160,"failureMessages":[],"fullName":"exportRetentionData should throw error if file write fails","status":"passed","title":"should throw error if file write fails"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361264,"runtime":3021,"slow":false,"start":1744467358243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\endpoints.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["server endpoints"],"duration":59,"failureMessages":[],"fullName":"server endpoints should return user data for GET /api/data with valid token","status":"passed","title":"should return user data for GET /api/data with valid token"},{"ancestorTitles":["server endpoints"],"duration":13,"failureMessages":[],"fullName":"server endpoints should return 401 for GET /api/data without token","status":"passed","title":"should return 401 for GET /api/data without token"},{"ancestorTitles":["server endpoints"],"duration":13,"failureMessages":[],"fullName":"server endpoints should return 403 for GET /api/data if user is pending","status":"passed","title":"should return 403 for GET /api/data if user is pending"},{"ancestorTitles":["server endpoints"],"duration":8,"failureMessages":[],"fullName":"server endpoints should return user info for GET /api/me with valid token","status":"passed","title":"should return user info for GET /api/me with valid token"},{"ancestorTitles":["server endpoints"],"duration":4,"failureMessages":[],"fullName":"server endpoints should return 401 for GET /api/me without token","status":"passed","title":"should return 401 for GET /api/me without token"},{"ancestorTitles":["server endpoints"],"duration":27,"failureMessages":[],"fullName":"server endpoints should initialize devices via POST /api/admin/init-devices","status":"passed","title":"should initialize devices via POST /api/admin/init-devices"},{"ancestorTitles":["server endpoints"],"duration":5,"failureMessages":[],"fullName":"server endpoints should return 401 for POST /api/admin/init-devices without token","status":"passed","title":"should return 401 for POST /api/admin/init-devices without token"},{"ancestorTitles":["server endpoints"],"duration":6,"failureMessages":[],"fullName":"server endpoints should clear invalid devices and re-sync via POST /api/admin/clear-invalid-devices","status":"passed","title":"should clear invalid devices and re-sync via POST /api/admin/clear-invalid-devices"},{"ancestorTitles":["server endpoints"],"duration":3,"failureMessages":[],"fullName":"server endpoints should return 401 for POST /api/admin/clear-invalid-devices without token","status":"passed","title":"should return 401 for POST /api/admin/clear-invalid-devices without token"},{"ancestorTitles":["server endpoints"],"duration":5,"failureMessages":[],"fullName":"server endpoints should return 200 with no issues for GET /api/admin/verify-data-integrity if data is valid","status":"passed","title":"should return 200 with no issues for GET /api/admin/verify-data-integrity if data is valid"},{"ancestorTitles":["server endpoints"],"duration":5,"failureMessages":[],"fullName":"server endpoints should return 200 with issues for GET /api/admin/verify-data-integrity if data is invalid","status":"passed","title":"should return 200 with issues for GET /api/admin/verify-data-integrity if data is invalid"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361270,"runtime":3030,"slow":false,"start":1744467358240},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\verifyDataIntegrity.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":34,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with no issues if data is valid","status":"passed","title":"should return 200 with no issues if data is valid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":6,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 200 with issues if data is invalid","status":"passed","title":"should return 200 with issues if data is invalid"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":4,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/admin/verify-data-integrity"],"duration":5,"failureMessages":[],"fullName":"GET /api/admin/verify-data-integrity should return 403 if user is not admin","status":"passed","title":"should return 403 if user is not admin"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361518,"runtime":203,"slow":false,"start":1744467361315},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\data.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/data"],"duration":5,"failureMessages":[],"fullName":"GET /api/data should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/data"],"duration":3,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is not found","status":"passed","title":"should return 403 if user is not found"},{"ancestorTitles":["GET /api/data"],"duration":4,"failureMessages":[],"fullName":"GET /api/data should return 403 if user is pending","status":"passed","title":"should return 403 if user is pending"},{"ancestorTitles":["GET /api/data"],"duration":2,"failureMessages":[],"fullName":"GET /api/data should return 200 with user data if user is valid","status":"passed","title":"should return 200 with user data if user is valid"},{"ancestorTitles":["GET /api/data"],"duration":3,"failureMessages":[],"fullName":"GET /api/data should return 403 if token verification fails","status":"passed","title":"should return 403 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361550,"runtime":287,"slow":false,"start":1744467361263},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\me.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["GET /api/me"],"duration":15,"failureMessages":[],"fullName":"GET /api/me should return 401 if no token is provided","status":"passed","title":"should return 401 if no token is provided"},{"ancestorTitles":["GET /api/me"],"duration":4,"failureMessages":[],"fullName":"GET /api/me should return 404 if user is not found","status":"passed","title":"should return 404 if user is not found"},{"ancestorTitles":["GET /api/me"],"duration":3,"failureMessages":[],"fullName":"GET /api/me should return 200 with user data if user is found","status":"passed","title":"should return 200 with user data if user is found"},{"ancestorTitles":["GET /api/me"],"duration":3,"failureMessages":[],"fullName":"GET /api/me should return 401 if token verification fails","status":"passed","title":"should return 401 if token verification fails"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361625,"runtime":417,"slow":false,"start":1744467361208},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\initDevices.integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["POST /api/admin/init-devices"],"duration":7,"failureMessages":[],"fullName":"POST /api/admin/init-devices should initialize devices successfully","status":"passed","title":"should initialize devices successfully"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467361686,"runtime":485,"slow":false,"start":1744467361201},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\server\\initDevices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["initDevices"],"duration":29,"failureMessages":[],"fullName":"initDevices should initialize devices from excel file","status":"passed","title":"should initialize devices from excel file"},{"ancestorTitles":["initDevices"],"duration":3,"failureMessages":[],"fullName":"initDevices should skip invalid devices from excel file and insert none","status":"passed","title":"should skip invalid devices from excel file and insert none"},{"ancestorTitles":["initDevices"],"duration":22,"failureMessages":[],"fullName":"initDevices should throw error if existing devices are invalid","status":"passed","title":"should throw error if existing devices are invalid"},{"ancestorTitles":["initDevices"],"duration":4,"failureMessages":[],"fullName":"initDevices should do nothing if no excel files exist","status":"passed","title":"should do nothing if no excel files exist"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467364097,"runtime":5857,"slow":true,"start":1744467358240},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-available.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":129,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should return devices excluding inactive status","status":"passed","title":"should return devices excluding inactive status"},{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":113,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should return devices excluding rented devices","status":"passed","title":"should return devices excluding rented devices"},{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":113,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should return devices excluding inactive devices","status":"passed","title":"should return devices excluding inactive devices"},{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":112,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should handle multiple conditions (rented, inactive)","status":"passed","title":"should handle multiple conditions (rented, inactive)"},{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":113,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should handle devices with statusReason","status":"passed","title":"should handle devices with statusReason"},{"ancestorTitles":["Devices API - Available Tests (GET /devices/available)"],"duration":111,"failureMessages":[],"fullName":"Devices API - Available Tests (GET /devices/available) should handle devices with rentedAt in the past","status":"passed","title":"should handle devices with rentedAt in the past"}]},{"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467364488,"runtime":6246,"slow":true,"start":1744467358242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-extended.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Extended Tests","GET /api/devices"],"duration":145,"failureMessages":[],"fullName":"Devices API - Extended Tests GET /api/devices should return all devices when osName filter is provided (no filtering logic)","status":"passed","title":"should return all devices when osName filter is provided (no filtering logic)"},{"ancestorTitles":["Devices API - Extended Tests","GET /api/devices"],"duration":116,"failureMessages":[],"fullName":"Devices API - Extended Tests GET /api/devices should return all devices when status filter is provided (no filtering logic)","status":"passed","title":"should return all devices when status filter is provided (no filtering logic)"},{"ancestorTitles":["Devices API - Extended Tests","GET /api/devices"],"duration":113,"failureMessages":[],"fullName":"Devices API - Extended Tests GET /api/devices should return devices unsorted when sort is provided (no sorting logic)","status":"passed","title":"should return devices unsorted when sort is provided (no sorting logic)"},{"ancestorTitles":["Devices API - Extended Tests","GET /api/devices"],"duration":111,"failureMessages":[],"fullName":"Devices API - Extended Tests GET /api/devices should return all devices when search keyword is provided (no search logic)","status":"passed","title":"should return all devices when search keyword is provided (no search logic)"},{"ancestorTitles":["Devices API - Extended Tests","GET /api/devices"],"duration":112,"failureMessages":[],"fullName":"Devices API - Extended Tests GET /api/devices should return all devices when pagination is provided (no pagination logic)","status":"passed","title":"should return all devices when pagination is provided (no pagination logic)"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/rent-device"],"duration":132,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/rent-device should handle long remark input","status":"passed","title":"should handle long remark input"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/rent-device"],"duration":113,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/rent-device should return 404 if deviceId is empty (no validation in devices.js)","status":"passed","title":"should return 404 if deviceId is empty (no validation in devices.js)"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/rent-device"],"duration":110,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/rent-device should fail with numeric deviceId","status":"passed","title":"should fail with numeric deviceId"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/rent-device"],"duration":125,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/rent-device should handle sequential rent requests","status":"passed","title":"should handle sequential rent requests"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/rent-device"],"duration":122,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/rent-device should handle special characters in remark","status":"passed","title":"should handle special characters in remark"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/return-device"],"duration":154,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/return-device should return 404 with invalid payload (no validation in devices.js)","status":"passed","title":"should return 404 with invalid payload (no validation in devices.js)"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/return-device"],"duration":125,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/return-device should reset device status after return","status":"passed","title":"should reset device status after return"},{"ancestorTitles":["Devices API - Extended Tests","POST /api/devices/return-device"],"duration":124,"failureMessages":[],"fullName":"Devices API - Extended Tests POST /api/devices/return-device should create RentalHistory entry after return","status":"passed","title":"should create RentalHistory entry after return"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467365756,"runtime":7513,"slow":true,"start":1744467358243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-rent.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":157,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle long remark input","status":"passed","title":"should handle long remark input"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":112,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should return 404 if deviceId is empty (no validation in devices.js)","status":"passed","title":"should return 404 if deviceId is empty (no validation in devices.js)"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":113,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should fail with numeric deviceId","status":"passed","title":"should fail with numeric deviceId"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":126,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle sequential rent requests","status":"passed","title":"should handle sequential rent requests"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":126,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle special characters in remark","status":"passed","title":"should handle special characters in remark"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":112,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle long deviceId","status":"passed","title":"should handle long deviceId"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":118,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle null remark","status":"passed","title":"should handle null remark"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":110,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle deviceId with special characters","status":"passed","title":"should handle deviceId with special characters"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":111,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle deviceId with spaces","status":"passed","title":"should handle deviceId with spaces"},{"ancestorTitles":["Devices API - Rent Tests (POST /api/devices/rent-device)"],"duration":114,"failureMessages":[],"fullName":"Devices API - Rent Tests (POST /api/devices/rent-device) should handle RentalHistory database error","status":"passed","title":"should handle RentalHistory database error"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467365901,"runtime":7659,"slow":true,"start":1744467358242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-query.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":136,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return all devices when osName filter is provided (no filtering logic)","status":"passed","title":"should return all devices when osName filter is provided (no filtering logic)"},{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":111,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return all devices when status filter is provided (no filtering logic)","status":"passed","title":"should return all devices when status filter is provided (no filtering logic)"},{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":114,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return devices unsorted when sort is provided (no sorting logic)","status":"passed","title":"should return devices unsorted when sort is provided (no sorting logic)"},{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":112,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return all devices when search keyword is provided (no search logic)","status":"passed","title":"should return all devices when search keyword is provided (no search logic)"},{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":114,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return all devices when pagination is provided (no pagination logic)","status":"passed","title":"should return all devices when pagination is provided (no pagination logic)"},{"ancestorTitles":["Devices API - Query Tests (GET /devices)"],"duration":111,"failureMessages":[],"fullName":"Devices API - Query Tests (GET /devices) should return all devices when multiple query parameters are provided","status":"passed","title":"should return all devices when multiple query parameters are provided"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467366291,"runtime":8048,"slow":true,"start":1744467358243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-helper.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Helper Tests"],"duration":125,"failureMessages":[],"fullName":"Devices API - Helper Tests should handle invalid token error (error handling)","status":"passed","title":"should handle invalid token error (error handling)"},{"ancestorTitles":["Devices API - Helper Tests"],"duration":129,"failureMessages":[],"fullName":"Devices API - Helper Tests should handle database error during rent (error handling)","status":"passed","title":"should handle database error during rent (error handling)"},{"ancestorTitles":["Devices API - Helper Tests"],"duration":204,"failureMessages":[],"fullName":"Devices API - Helper Tests should handle database error during return (error handling)","status":"passed","title":"should handle database error during return (error handling)"},{"ancestorTitles":["Devices API - Helper Tests"],"duration":116,"failureMessages":[],"fullName":"Devices API - Helper Tests should handle RentalHistory database error during rent","status":"passed","title":"should handle RentalHistory database error during rent"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467366521,"runtime":8280,"slow":true,"start":1744467358241},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API","GET /api/devices"],"duration":140,"failureMessages":[],"fullName":"Devices API GET /api/devices should return list of devices","status":"passed","title":"should return list of devices"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":109,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 401 if no token provided","status":"passed","title":"should return 401 if no token provided"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":107,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 401 if token is invalid","status":"passed","title":"should return 401 if token is invalid"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":115,"failureMessages":[],"fullName":"Devices API GET /api/devices should return 404 if no devices","status":"passed","title":"should return 404 if no devices"},{"ancestorTitles":["Devices API","GET /api/devices"],"duration":110,"failureMessages":[],"fullName":"Devices API GET /api/devices should handle database error","status":"passed","title":"should handle database error"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":109,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return list of available devices","status":"passed","title":"should return list of available devices"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":112,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return 404 if no available devices","status":"passed","title":"should return 404 if no available devices"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":113,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return 404 if devices are inactive","status":"passed","title":"should return 404 if devices are inactive"},{"ancestorTitles":["Devices API","GET /api/devices/available"],"duration":114,"failureMessages":[],"fullName":"Devices API GET /api/devices/available should return 500 if token is expired","status":"passed","title":"should return 500 if token is expired"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":144,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should rent a device successfully","status":"passed","title":"should rent a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":113,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if device already rented","status":"passed","title":"should fail if device already rented"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":112,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if device not active","status":"passed","title":"should fail if device not active"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":113,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should fail if deviceId is invalid","status":"passed","title":"should fail if deviceId is invalid"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":114,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should handle Device database save error","status":"passed","title":"should handle Device database save error"},{"ancestorTitles":["Devices API","POST /api/devices/rent-device"],"duration":111,"failureMessages":[],"fullName":"Devices API POST /api/devices/rent-device should handle RentalHistory database save error","status":"passed","title":"should handle RentalHistory database save error"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":168,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should return a device successfully","status":"passed","title":"should return a device successfully"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":113,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if device not rented","status":"passed","title":"should fail if device not rented"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":119,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if user is not the renter","status":"passed","title":"should fail if user is not the renter"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":112,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should fail if device does not exist","status":"passed","title":"should fail if device does not exist"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":151,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should handle Device database error","status":"passed","title":"should handle Device database error"},{"ancestorTitles":["Devices API","POST /api/devices/return-device"],"duration":123,"failureMessages":[],"fullName":"Devices API POST /api/devices/return-device should handle RentalHistory database error","status":"passed","title":"should handle RentalHistory database error"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467367273,"runtime":9034,"slow":true,"start":1744467358239},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-return.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":189,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should return 404 with invalid payload (no validation in devices.js)","status":"passed","title":"should return 404 with invalid payload (no validation in devices.js)"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":128,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should reset device status after return","status":"passed","title":"should reset device status after return"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":120,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should create RentalHistory entry after return","status":"passed","title":"should create RentalHistory entry after return"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":115,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should fail if device is already returned","status":"passed","title":"should fail if device is already returned"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":117,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should fail if user is not the renter","status":"passed","title":"should fail if user is not the renter"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":119,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should handle return with complex device state","status":"passed","title":"should handle return with complex device state"},{"ancestorTitles":["Devices API - Return Tests (POST /api/devices/return-device)"],"duration":144,"failureMessages":[],"fullName":"Devices API - Return Tests (POST /api/devices/return-device) should handle RentalHistory database error during return","status":"passed","title":"should handle RentalHistory database error during return"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467367320,"runtime":9080,"slow":true,"start":1744467358240},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\auth\\auth.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":183,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should register a new user","status":"passed","title":"should register a new user"},{"ancestorTitles":["Auth API","POST /api/auth/register"],"duration":55,"failureMessages":[],"fullName":"Auth API POST /api/auth/register should fail to register if user already exists","status":"passed","title":"should fail to register if user already exists"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":104,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should login successfully with correct credentials","status":"passed","title":"should login successfully with correct credentials"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":100,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login with incorrect password","status":"passed","title":"should fail to login with incorrect password"},{"ancestorTitles":["Auth API","POST /api/auth/login"],"duration":55,"failureMessages":[],"fullName":"Auth API POST /api/auth/login should fail to login if user does not exist","status":"passed","title":"should fail to login if user does not exist"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":59,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available true if ID is not taken","status":"passed","title":"should return available true if ID is not taken"},{"ancestorTitles":["Auth API","POST /api/auth/check-id"],"duration":53,"failureMessages":[],"fullName":"Auth API POST /api/auth/check-id should return available false if ID is taken","status":"passed","title":"should return available false if ID is taken"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":62,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should return user data with valid token","status":"passed","title":"should return user data with valid token"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":54,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if no token provided","status":"passed","title":"should fail if no token provided"},{"ancestorTitles":["Auth API","GET /api/auth/me"],"duration":60,"failureMessages":[],"fullName":"Auth API GET /api/auth/me should fail if user not found","status":"passed","title":"should fail if user not found"}]},{"numFailingTests":6,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467367533,"runtime":9290,"slow":true,"start":1744467358243},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › PATCH /api/devices › should update device status successfully\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › PATCH /api/devices › should return 401 if no token provided\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › PATCH /api/devices › should return 404 if device not found\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › DELETE /api/devices › should delete device successfully\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › DELETE /api/devices › should return 401 if no token provided\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDevices API - Other Tests (PATCH and DELETE /api/devices) › DELETE /api/devices › should return 404 if device not found\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 5000 ms for a hook.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 |\u001b[39m \u001b[36mlet\u001b[39m app\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 19 |\u001b[39m beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   mongoServer \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mMongoMemoryServer\u001b[39m\u001b[33m.\u001b[39mcreate()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m uri \u001b[33m=\u001b[39m mongoServer\u001b[33m.\u001b[39mgetUri()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnect(uri)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.beforeAll (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:19:1)\u001b[22m\u001b[2m\u001b[22m\n\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    TypeError: Cannot read properties of undefined (reading 'stop')\n\n    \u001b[0m \u001b[90m 31 |\u001b[39m afterAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 32 |\u001b[39m   \u001b[36mawait\u001b[39m mongoose\u001b[33m.\u001b[39mconnection\u001b[33m.\u001b[39mclose()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 33 |\u001b[39m   \u001b[36mawait\u001b[39m mongoServer\u001b[33m.\u001b[39mstop()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 34 |\u001b[39m   \u001b[90m// 비동기 리소스 정리 확인\u001b[39m\n     \u001b[90m 35 |\u001b[39m   \u001b[36mawait\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mPromise\u001b[39m(resolve \u001b[33m=>\u001b[39m setTimeout(resolve\u001b[33m,\u001b[39m \u001b[35m1000\u001b[39m))\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Object.stop (\u001b[22m\u001b[0m\u001b[36mtests/routes/devices/devices-other.test.js\u001b[39m\u001b[0m\u001b[2m:33:21)\u001b[22m\n","testResults":[{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","PATCH /api/devices"],"duration":3,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) PATCH /api/devices should update device status successfully","status":"failed","title":"should update device status successfully"},{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","PATCH /api/devices"],"duration":0,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) PATCH /api/devices should return 401 if no token provided","status":"failed","title":"should return 401 if no token provided"},{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","PATCH /api/devices"],"duration":0,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) PATCH /api/devices should return 404 if device not found","status":"failed","title":"should return 404 if device not found"},{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","DELETE /api/devices"],"duration":0,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) DELETE /api/devices should delete device successfully","status":"failed","title":"should delete device successfully"},{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","DELETE /api/devices"],"duration":0,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) DELETE /api/devices should return 401 if no token provided","status":"failed","title":"should return 401 if no token provided"},{"ancestorTitles":["Devices API - Other Tests (PATCH and DELETE /api/devices)","DELETE /api/devices"],"duration":0,"failureMessages":["Error: thrown: \"Exceeded timeout of 5000 ms for a hook.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at Object.beforeAll (C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\devices\\devices-other.test.js:19:1)\n    at Runtime._execModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runTestInternal (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Devices API - Other Tests (PATCH and DELETE /api/devices) DELETE /api/devices should return 404 if device not found","status":"failed","title":"should return 404 if device not found"}]},{"numFailingTests":0,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1744467369784,"runtime":11542,"slow":true,"start":1744467358242},"testFilePath":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\routes\\admin\\users.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":227,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":164,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return pending users","status":"passed","title":"should return pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users/pending"],"duration":153,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users/pending should return empty list if no pending users","status":"passed","title":"should return empty list if no pending users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":148,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":150,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return approved users","status":"passed","title":"should return approved users"},{"ancestorTitles":["Admin Users API","GET /api/admin/users"],"duration":194,"failureMessages":[],"fullName":"Admin Users API GET /api/admin/users should return empty list if no approved users","status":"passed","title":"should return empty list if no approved users"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":154,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":146,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/approve"],"duration":151,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/approve should approve a pending user","status":"passed","title":"should approve a pending user"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":146,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":144,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/reject"],"duration":150,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/reject should reject a user and save to DeletedUser","status":"passed","title":"should reject a user and save to DeletedUser"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":144,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if not admin","status":"passed","title":"should fail if not admin"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":149,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if user not found","status":"passed","title":"should fail if user not found"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":165,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting own account","status":"passed","title":"should fail if deleting own account"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":196,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should fail if deleting higher or equal role level","status":"passed","title":"should fail if deleting higher or equal role level"},{"ancestorTitles":["Admin Users API","POST /api/admin/users/delete"],"duration":155,"failureMessages":[],"fullName":"Admin Users API POST /api/admin/users/delete should delete a user and save to DeletedUser","status":"passed","title":"should delete a user and save to DeletedUser"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["routes/**/*.js","models/**/*.js","utils/**/*.js","server.js","!**/*.test.js","!**/*.integration.test.js"],"coverageDirectory":"C:\\Users\\62String\\DeviceRentalApi\\backend\\tests\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html"],"coverageThreshold":{"global":{"statements":0,"branches":0,"functions":0,"lines":0}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","includeCoverage":true,"openReport":false}]],"rootDir":"C:\\Users\\62String\\DeviceRentalApi\\backend","runTestsByPath":false,"seed":-1449848923,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\62String\\DeviceRentalApi\\backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1744467370312,"_reporterOptions":{"publicPath":"tests/html-report","filename":"report.html","expand":true,"pageTitle":"DeviceRentalApi Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeCoverage":true},"logInfoMapping":{},"attachInfos":{}})